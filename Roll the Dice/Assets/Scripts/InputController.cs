//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/InputController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputController : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputController"",
    ""maps"": [
        {
            ""name"": ""Ground"",
            ""id"": ""0c889edc-f025-455c-9f84-c83654f577a8"",
            ""actions"": [
                {
                    ""name"": ""MoveSideways"",
                    ""type"": ""PassThrough"",
                    ""id"": ""71ea6955-ffee-4cc7-afe6-b0d5fb8c8af5"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveUpDown"",
                    ""type"": ""Button"",
                    ""id"": ""69ce8538-a453-4d63-8510-510393aa0308"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reset"",
                    ""type"": ""Button"",
                    ""id"": ""1f1a9bd8-8e33-44d0-b8f6-ddcbcde02a1f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveUp"",
                    ""type"": ""Button"",
                    ""id"": ""4c9220a2-ebf7-4c57-8bd4-a2d430ab41b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveDown"",
                    ""type"": ""Button"",
                    ""id"": ""f26231eb-036a-4144-a89e-7b98811b164b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveLeft"",
                    ""type"": ""Button"",
                    ""id"": ""7be5bd0c-ab17-479c-a32d-cd3bcc21bbd6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveRight"",
                    ""type"": ""Button"",
                    ""id"": ""181360f9-c946-4e93-824a-b7b1786364a4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""9e2a0dd9-8673-440c-b40b-a3fb598eb9b9"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reset"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""bc608ce7-8178-4954-a48b-665824e1df7b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveSideways"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a50ab655-7734-4013-b103-1e5399453bd3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveSideways"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""a3f2177c-76c1-48f2-b9d4-2142d9abf55b"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveSideways"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""fb6a6e3c-a0fe-4d82-9750-bda17794bfd3"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUpDown"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2405fa76-d56d-4e82-810c-81c3e6325c30"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""980c8e6e-f971-4416-92a3-c25b411f16ca"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUpDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0d6d0dfb-5279-46a4-86ab-c9567a30faf8"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b019b159-38ed-4118-ab2f-68937fdb8dc6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f7caa0dc-a865-4cd2-9381-f1c580ed0f17"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""415dd0de-1213-4ecb-8d26-0219c61e14c5"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Ground
        m_Ground = asset.FindActionMap("Ground", throwIfNotFound: true);
        m_Ground_MoveSideways = m_Ground.FindAction("MoveSideways", throwIfNotFound: true);
        m_Ground_MoveUpDown = m_Ground.FindAction("MoveUpDown", throwIfNotFound: true);
        m_Ground_Reset = m_Ground.FindAction("Reset", throwIfNotFound: true);
        m_Ground_MoveUp = m_Ground.FindAction("MoveUp", throwIfNotFound: true);
        m_Ground_MoveDown = m_Ground.FindAction("MoveDown", throwIfNotFound: true);
        m_Ground_MoveLeft = m_Ground.FindAction("MoveLeft", throwIfNotFound: true);
        m_Ground_MoveRight = m_Ground.FindAction("MoveRight", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Ground
    private readonly InputActionMap m_Ground;
    private IGroundActions m_GroundActionsCallbackInterface;
    private readonly InputAction m_Ground_MoveSideways;
    private readonly InputAction m_Ground_MoveUpDown;
    private readonly InputAction m_Ground_Reset;
    private readonly InputAction m_Ground_MoveUp;
    private readonly InputAction m_Ground_MoveDown;
    private readonly InputAction m_Ground_MoveLeft;
    private readonly InputAction m_Ground_MoveRight;
    public struct GroundActions
    {
        private @InputController m_Wrapper;
        public GroundActions(@InputController wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveSideways => m_Wrapper.m_Ground_MoveSideways;
        public InputAction @MoveUpDown => m_Wrapper.m_Ground_MoveUpDown;
        public InputAction @Reset => m_Wrapper.m_Ground_Reset;
        public InputAction @MoveUp => m_Wrapper.m_Ground_MoveUp;
        public InputAction @MoveDown => m_Wrapper.m_Ground_MoveDown;
        public InputAction @MoveLeft => m_Wrapper.m_Ground_MoveLeft;
        public InputAction @MoveRight => m_Wrapper.m_Ground_MoveRight;
        public InputActionMap Get() { return m_Wrapper.m_Ground; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GroundActions set) { return set.Get(); }
        public void SetCallbacks(IGroundActions instance)
        {
            if (m_Wrapper.m_GroundActionsCallbackInterface != null)
            {
                @MoveSideways.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveSideways;
                @MoveSideways.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveSideways;
                @MoveSideways.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveSideways;
                @MoveUpDown.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveUpDown;
                @MoveUpDown.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveUpDown;
                @MoveUpDown.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveUpDown;
                @Reset.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnReset;
                @Reset.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnReset;
                @Reset.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnReset;
                @MoveUp.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveUp;
                @MoveUp.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveUp;
                @MoveUp.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveUp;
                @MoveDown.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveDown;
                @MoveDown.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveDown;
                @MoveDown.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveDown;
                @MoveLeft.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveLeft;
                @MoveLeft.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveLeft;
                @MoveLeft.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveLeft;
                @MoveRight.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveRight;
                @MoveRight.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveRight;
                @MoveRight.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveRight;
            }
            m_Wrapper.m_GroundActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveSideways.started += instance.OnMoveSideways;
                @MoveSideways.performed += instance.OnMoveSideways;
                @MoveSideways.canceled += instance.OnMoveSideways;
                @MoveUpDown.started += instance.OnMoveUpDown;
                @MoveUpDown.performed += instance.OnMoveUpDown;
                @MoveUpDown.canceled += instance.OnMoveUpDown;
                @Reset.started += instance.OnReset;
                @Reset.performed += instance.OnReset;
                @Reset.canceled += instance.OnReset;
                @MoveUp.started += instance.OnMoveUp;
                @MoveUp.performed += instance.OnMoveUp;
                @MoveUp.canceled += instance.OnMoveUp;
                @MoveDown.started += instance.OnMoveDown;
                @MoveDown.performed += instance.OnMoveDown;
                @MoveDown.canceled += instance.OnMoveDown;
                @MoveLeft.started += instance.OnMoveLeft;
                @MoveLeft.performed += instance.OnMoveLeft;
                @MoveLeft.canceled += instance.OnMoveLeft;
                @MoveRight.started += instance.OnMoveRight;
                @MoveRight.performed += instance.OnMoveRight;
                @MoveRight.canceled += instance.OnMoveRight;
            }
        }
    }
    public GroundActions @Ground => new GroundActions(this);
    public interface IGroundActions
    {
        void OnMoveSideways(InputAction.CallbackContext context);
        void OnMoveUpDown(InputAction.CallbackContext context);
        void OnReset(InputAction.CallbackContext context);
        void OnMoveUp(InputAction.CallbackContext context);
        void OnMoveDown(InputAction.CallbackContext context);
        void OnMoveLeft(InputAction.CallbackContext context);
        void OnMoveRight(InputAction.CallbackContext context);
    }
}
